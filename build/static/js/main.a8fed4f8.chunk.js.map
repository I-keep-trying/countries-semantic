{"version":3,"sources":["components/Footer.js","images/weather-animated/index.js","images/weather-animated/day.svg","images/weather-animated/night.svg","images/weather-animated/cloudy-day-1.svg","images/weather-animated/cloudy-night-1.svg","images/weather-animated/clouds-scattered-day.svg","images/weather-animated/clouds-scattered-night.svg","images/weather-animated/broken-clouds-day.svg","images/weather-animated/broken-clouds-night.svg","images/weather-animated/rainy-1.svg","images/weather-animated/rainy-4.svg","images/weather-animated/rainy-3.svg","images/weather-animated/rainy-5.svg","images/weather-animated/thunder-day.svg","images/weather-animated/thunder-night.svg","images/weather-animated/snowy-3.svg","images/weather-animated/snowy-6.svg","images/weather-animated/mist-day.svg","images/weather-animated/mist-night.svg","components/Weather.js","Map/index.js","pages/Country.js","components/Header.js","pages/Countries.js","App.js","index.js"],"names":["Footer","Menu","fixed","className","Item","Header","as","Images","id","path","alt","WeatherWidget","weather","unit","activeItem","country","tempStyle","fontSize","stroke","fill","code","current","icon","isMobile","capital","description","src","width","height","name","Math","round","temp","colSpan","feels_like","clouds","wind_speed","humidity","pressure","href","target","rel","moment","unix","dt","format","Segment","style","margin","border","boxShadow","floated","daily","d","strokeWidth","opacity","x","y","textAnchor","max","min","MapView","lat","lng","useState","latitude","longitude","zoom","viewport","setViewport","eventRecognizerOptions","pan","threshold","tap","isNaN","mapboxApiAccessToken","process","mapStyle","onViewportChange","Country","isLoading","setInput","setRegion","setSubRegion","setIsLoading","setActiveItem","setWeather","setUnit","isWeatherLoading","setIsWeatherLoading","activeTab","setActiveTab","activeTab2","setActiveTab2","location","setLocation","useEffect","axios","get","then","res","data","items","position","latlng","Object","entries","length","url","window","localStorage","getItem","JSON","parse","setTimeout","removeItem","response","setItem","stringify","handleUnitButtonClick","handleItemClick","e","handleItemClick2","Icon","loading","Container","Button","basic","onClick","tabular","active","Grid","marginBottom","marginTop","marginLeft","marginRight","Column","Row","paddingRight","verticalAlign","Card","Image","flag","paddingLeft","region","subregion","padding","Map","columns","Group","color","Or","Flag","paddingTop","borderWidth","fluid","Weather","paddingBottom","relaxed","Content","Popup","borderRadius","hoverable","inverted","aria-label","trigger","size","Description","nativeName","area","toLocaleString","population","Divider","languages","map","lang","timezones","tz","currencies","curr","symbol","HeaderNav","input","handleChange","countries","inputRef","useRef","undefined","blur","header","fitted","type","ref","value","onChange","placeholder","Countries","setCountry","filteredCountries","countriesList","filter","c","toLowerCase","startsWith","filterByRegion","filterBySubregion","r","result","handleClick","handleRegionClick","getSubregions","regions","CountriesTable","bordered","compact","CountriesMenu","top","vertical","borderless","subregions","s","attached","widths","rs","App","ReactDOM","render","document","getElementById"],"mappings":"ulyCAeeA,EAZA,WACb,OACE,mCACE,cAACC,EAAA,EAAD,CAAMC,MAAM,SAASC,UAAU,2BAA/B,SACE,cAACF,EAAA,EAAKG,KAAN,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,yC,mJCoHKC,EAjGA,CACb,MAAO,CACLC,GAAI,MACJC,KC9BW,IAA0B,gCD+BrCC,IAAK,aAEP,MAAO,CACLF,GAAI,MACJC,KEnCW,IAA0B,kCFoCrCC,IAAK,eAEP,MAAO,CACLF,GAAI,MACJC,KGxCW,IAA0B,yCHyCrCC,IAAK,cAGP,MAAO,CACLF,GAAI,MACJC,KI9CW,IAA0B,2CJ+CrCC,IAAK,gBAGP,MAAO,CACLF,GAAI,MACJC,KKpDW,IAA0B,iDLqDrCC,IAAK,wBAEP,MAAO,CACLF,GAAI,MACJC,KMzDW,IAA0B,mDN0DrCC,IAAK,0BAEP,MAAO,CACLF,GAAI,MACJC,KO9DW,IAA0B,8CP+DrCC,IAAK,qBAGP,MAAO,CACLF,GAAI,MACJC,KQpEW,IAA0B,gDRqErCC,IAAK,uBAGP,MAAO,CACLF,GAAI,MACJC,KS1EW,IAA0B,oCT2ErCC,IAAK,cAEP,MAAO,CACLF,GAAI,MACJC,KU/EW,IAA0B,oCVgFrCC,IAAK,gBAEP,MAAO,CACLF,GAAI,MACJC,KWpFW,IAA0B,oCXqFrCC,IAAK,aAEP,MAAO,CACLF,GAAI,MACJC,KYzFW,IAA0B,oCZ0FrCC,IAAK,eAEP,MAAO,CACLF,GAAI,MACJC,Ka9FW,IAA0B,wCb+FrCC,IAAK,eAEP,MAAO,CACLF,GAAI,MACJC,KcnGW,IAA0B,0CdoGrCC,IAAK,iBAEP,MAAO,CACLF,GAAI,MACJC,KexGW,IAA0B,oCfyGrCC,IAAK,aAEP,MAAO,CACLF,GAAI,MACJC,KgB7GW,IAA0B,oChB8GrCC,IAAK,eAEP,MAAO,CACLF,GAAI,MACJC,KiBlHW,IAA0B,qCjBmHrCC,IAAK,YAEP,MAAO,CACLF,GAAI,MACJC,KkBvHW,IAA0B,uClBwHrCC,IAAK,e,cmB0RMC,MA1Yf,YAAgE,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAC5CC,EAAY,CAChBC,SAAU,OACVC,OAAQ,kBACRC,KAAM,mBAGFC,EAAOR,EAAQS,QAAQT,QAAQ,GAAGU,KAClCA,EAAOf,EAAOa,GAAMX,KAE1B,OAAOc,WACL,sBAAKpB,UAAU,wDAAf,UACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,gCACE,qBAAIA,UAAU,sBAAd,UAAqCY,EAAQS,QAA7C,OACA,8BAAIZ,EAAQS,QAAQT,QAAQ,GAAGa,YAA/B,YAGJ,qBACEC,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPlB,IAAG,qBAAgBK,EAAQc,MAC3B1B,UAAU,2BAGd,qBAAKA,UAAU,qCAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,6BAAf,UACG2B,KAAKC,MAAMnB,EAAQS,QAAQW,MAC5B,wCAAiB,WAATnB,EAAoB,IAAM,UAEpC,8BACE,qBAAKV,UAAU,qBAAf,SACE,uBAAOA,UAAU,uBAAjB,SACE,kCACE,oBAAIA,UAAU,uBAAd,SACE,oBAAI8B,QAAQ,IAAI9B,UAAU,sBAA1B,uBAIF,qBAAIA,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,wBACA,qBAAIA,UAAU,sBAAd,UACG2B,KAAKC,MAAMnB,EAAQS,QAAQa,YAC5B,wCAAiB,WAATrB,EAAoB,IAAM,aAGtC,qBAAIV,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,oBACA,qBAAIA,UAAU,sBAAd,UACGS,EAAQS,QAAQc,OACjB,2CAGJ,qBAAIhC,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,kBACA,qBAAIA,UAAU,sBAAd,UACG2B,KAAKC,MAAMnB,EAAQS,QAAQe,YACZ,WAAftB,EAA0B,MAAQ,YAGvC,qBAAIX,UAAU,4BAAd,UACE,oBAAIA,UAAU,sBAAd,sBACA,qBAAIA,UAAU,sBAAd,UACGS,EAAQS,QAAQgB,SADnB,UAIF,qBAAIlC,UAAU,4BAAd,UACE,oBAAIA,UAAU,sBAAd,sBACA,qBAAIA,UAAU,sBAAd,UACGS,EAAQS,QAAQiB,SADnB,2BAUd,qBAAKnC,UAAU,mDAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,mBACEoC,KAAK,8BACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBAAKtC,UAAU,qCAEjB,qBAAKA,UAAU,qBAAf,SACGuC,IAAOC,KAAK/B,EAAQS,QAAQuB,IAAIC,OAAO,gCAMhD,gCACE,qBAAK1C,UAAU,2CAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,qBAAIA,UAAU,2BAAd,UAA0CY,EAAQS,QAAlD,OACA,mBACEe,KAAK,8BACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBAAKtC,UAAU,wCAIrB,gCAEE,eAAC2C,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,EAAGC,OAAQ,EAAGC,UAAW,QAC1CC,QAAQ,OAFV,UAIE,sBAAKhD,UAAU,0BAAf,UACE,qBACEuB,IAAG,yFAAoFd,EAAQS,QAAQT,QAAQ,GAAGU,KAA/G,QACHK,MAAM,MACNC,OAAO,MACPlB,IAAG,qBAAgBK,EAAQc,MAC3B1B,UAAU,2BAEZ,qBAAKA,UAAU,yBAAf,SACE,oBAAGA,UAAU,4BAAb,UACG2B,KAAKC,MAAMnB,EAAQS,QAAQW,MAC5B,wCAAiB,WAATnB,EAAoB,IAAM,eAIxC,sBAAKV,UAAU,0BAAf,UACE,mBAAGA,UAAU,2BAAb,SACGS,EAAQS,QAAQT,QAAQ,GAAGa,cAE9B,oBAAGtB,UAAU,0BAAb,mBACS2B,KAAKC,MAAMnB,EAAQS,QAAQe,YACxB,WAATvB,EAAoB,OAAS,gBAKpC,cAACiC,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,EAAGC,OAAQ,EAAGC,UAAW,QAC1CC,QAAQ,QAFV,SAIE,sBAAKhD,UAAU,wBAAf,UACE,qBAAIA,UAAU,WAAd,UACE,qBAAIA,UAAU,iBAAd,kBAEE,uBACCuC,IAAOC,KAAK/B,EAAQS,QAAQuB,IAAIC,OAAO,SACxC,qBACEnB,IAAG,2CAAsCd,EAAQS,QAAQT,QAAQ,GAAGU,KAAjE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAI,aAGR,qBAAIP,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,YAGjD,qBAAI1C,UAAU,iBAAd,UACGuC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,OACzC,uBAFF,IAEUH,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,SAChD,qBACEnB,IAAG,2CAAsCd,EAAQwC,MAAM,GAAGxC,QAAQ,GAAGU,KAAlE,QACHK,MAAM,KACNC,OAAO,KACPlB,IAAKgC,IAAOC,KAAK/B,EAAQwC,MAAM,GAAGR,IAAIC,OAAO,eAInD,qBAAKrC,GAAG,WAAWL,UAAU,uBAA7B,SACE,sBACEA,UAAU,OACVwB,MAAM,MACNC,OAAO,KACPT,KAAK,UACL4B,MAAO,CAAE7B,OAAQ,sBALnB,UAOE,4BACE,sBACEmC,EAAE,4hBACFN,MAAO,CACLO,YAAa,MACbpC,OAAQ,oBACRC,KAAM,oBACNoC,QAAS,OAKf,uBACEC,EAAE,KACFC,EAAE,qBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,KACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,oBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,oBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,qBACFC,EAAE,qBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,oBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,oBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,qBACFC,EAAE,KACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,UASA,uBACEJ,EAAE,MACFC,EAAE,qBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK2B,KANpC,UAQA,uBACEH,EAAE,MACFC,EAAE,oBACFC,WAAW,SACXX,MAAO/B,EAJT,UAMGc,KAAKC,MAAMnB,EAAQwC,MAAM,GAAGpB,KAAK4B,KANpC,2B,iBCtVDC,EAvCC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAAU,EACAC,mBAAS,CACvCC,SAAU,GACVC,UAAW,GACXC,KAAM,IAJwB,mBACzBC,EADyB,KACfC,EADe,KAY1BC,EAAyB/C,WAC3B,CACEgD,IAAK,CAAEC,UAAW,IAClBC,IAAK,CAAED,UAAW,IAEpB,GAEJ,OACE,8BACIE,MAAMZ,GAYN,6CAXA,cAAC,IAAD,qCACEQ,uBAAwBA,EACxBK,qBAAsBC,6FACtBC,SAAS,sCAlBA,CACflD,MAAO,OACPC,OAAQ,MAkBEwC,GALN,IAMEU,iBAAkB,SAACV,GACjBC,EAAY,2BAAKD,GAAN,IAAgBH,SAAUH,EAAKI,UAAWH,YC6qBlDgB,EA1rBC,SAAC,GAQV,IAAD,EAPJhE,EAOI,EAPJA,QACAiE,EAMI,EANJA,UACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cACI,EAC0BrB,mBAAS,IADnC,mBACGpD,EADH,KACY0E,EADZ,OAEoBtB,mBAAS,UAF7B,mBAEGnD,EAFH,KAES0E,EAFT,OAG4CvB,oBAAS,GAHrD,mBAGGwB,EAHH,KAGqBC,EAHrB,OAI8BzB,mBAAS,WAJvC,mBAIG0B,EAJH,KAIcC,EAJd,OAKgC3B,mBAAS,QALzC,mBAKG4B,EALH,KAKeC,EALf,OAM4B7B,mBAAS,IANrC,mBAMG8B,EANH,KAMaC,EANb,KAQJC,qBAAU,WACRC,IACGC,IADH,0DAEuDnF,EAAQS,QAF/D,YAE0ET,EAAQc,KAFlF,mBAEiG+C,gDAE9FuB,MAAK,SAACC,GACLL,EAAYK,EAAIC,KAAKC,MAAM,GAAGC,eAEjC,CAACxF,IACJ,IAAM+C,EAAMhC,KAAKC,MAAMhB,EAAQyF,OAAO,IAChCzC,GAAMjC,KAAKC,MAAMhB,EAAQyF,OAAO,IAEtCR,qBAAU,WACR,GAAIS,OAAOC,QAAQZ,GAAUa,OAAS,EAAG,CACvC,IAAMC,EAAG,8DAA0D9C,EAA1D,gBAAqEC,GAArE,0CAA0Ga,mCAA1G,kBAAyJ/D,GAGvJ,WAATA,GAEE,OADFgG,OAAOC,aAAaC,QAApB,UAA+BhG,EAAQc,KAAvC,wBAGA4D,GAAoB,GACpBH,EACE0B,KAAKC,MACHJ,OAAOC,aAAaC,QAApB,UAA+BhG,EAAQc,KAAvC,yBAGJ4D,GAAoB,GACpBL,GAAa,GAEb8B,YAAW,WACTL,OAAOC,aAAaK,WAApB,UAAkCpG,EAAQc,KAA1C,yBACC,MAEM,aAAThB,GAEE,OADFgG,OAAOC,aAAaC,QAApB,UAA+BhG,EAAQc,KAAvC,0BAGAyD,EACE0B,KAAKC,MACHJ,OAAOC,aAAaC,QAApB,UAA+BhG,EAAQc,KAAvC,2BAGJ4D,GAAoB,GACpBL,GAAa,GACb8B,YAAW,WACTL,OAAOC,aAAaK,WAApB,UAAkCpG,EAAQc,KAA1C,2BACC,MAEHoE,IAAMC,IAAIU,GAAKT,MAAK,SAACiB,GACnB9B,EAAW8B,EAASf,MACpBZ,GAAoB,GACpBL,GAAa,GACbyB,OAAOC,aAAaO,QAApB,UACKtG,EAAQc,KADb,uBACgChB,GAC9BmG,KAAKM,UAAUF,EAASf,aAK/B,CAACP,EAAUjF,IAEd,IAOM0G,GAAwB,WAC5B,MAAa,WAAT1G,GACF4E,GAAoB,GACpBF,EAAQ,aACD,IAETE,GAAoB,GACpBF,EAAQ,WACD,IAGHiC,GAAkB,SAACC,EAAD,GAAkB,IAAZ5F,EAAW,EAAXA,KAC5B8D,EAAa9D,IAGT6F,GAAmB,SAACD,EAAD,GAAkB,IAAZ5F,EAAW,EAAXA,KAC7BgE,EAAchE,IAGhB,OAAQmD,EA4kBN,mCACE,cAAC2C,EAAA,EAAD,CAAMC,SAAO,EAAC/F,KAAK,cA5kBrB,mCACE,eAACgG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,QA7BN,WACZ/C,EAAS,IACTC,EAAU,OACVC,EAAa,IACbE,EAAc,QAyBV,kBAGC9D,WACC,qCACE,eAACtB,EAAA,EAAD,CAAMgI,SAAO,EAAb,UACE,cAAChI,EAAA,EAAKG,MAAN,GACE8H,QAAM,EACNrG,KAAK,QAFP,uBAGyB,SAAf+D,GAHV,wBAIW8B,IAJX,IAMA,cAACzH,EAAA,EAAKG,KAAN,CACEyB,KAAK,MACLqG,OAAuB,QAAftC,EACRoC,QAASN,QAIb,cAACS,EAAA,EAAD,CAAMpF,MAAO,CAAEqF,aAAc,GAAIC,UAAW,EAAGC,WAAY,EAAGC,YAAY,GAA1E,SACkB,SAAf3C,EACC,eAACuC,EAAA,EAAKK,OAAN,WACE,eAACL,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEqF,aAAc,EAAGC,UAAW,IAA/C,UACE,cAACF,EAAA,EAAKK,OAAN,CACEzF,MAAO,CAAE2F,aAAc,GACvBC,cAAc,SACdhH,MAAO,EAHT,SAKE,cAACiH,EAAA,EAAD,CAAM7F,MAAO,CAAEuF,WAAY,GAA3B,SACE,cAACO,EAAA,EAAD,CAAOnH,IAAKX,EAAQ+H,KAAMpI,IAAI,qBAGlC,cAACyH,EAAA,EAAKK,OAAN,CAAaG,cAAc,SAAShH,MAAO,GAA3C,SACE,cAACtB,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEgG,YAAa,EAAGV,UAAW,IAApD,SACGtH,EAAQc,YAIf,eAACsG,EAAA,EAAKM,IAAN,WACG,IACD,eAACpI,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEqF,aAAc,EAAGC,UAAW,GAArD,qBACWtH,EAAQiI,aAGrB,cAACb,EAAA,EAAKM,IAAN,UACE,eAACpI,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEqF,aAAc,EAAGC,UAAW,GAArD,uBAEyB,KAAtBtH,EAAQkI,UACP,yCAAIlI,EAAQkI,aAEZ,mDAMR,cAACd,EAAA,EAAKK,OAAN,CAAazF,MAAO,CAAEmG,QAAS,EAAGZ,WAAY,GAA9C,SACE,cAACT,EAAA,EAAD,CAAW9E,MAAO,CAAEpB,MAAO,OAAQC,OAAQ,QAA3C,SACE,cAACuH,EAAD,CAAKrF,IAAKA,EAAKC,IAAKA,cAQ9B,eAACoE,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,UACE,eAACjB,EAAA,EAAKK,OAAN,WACG,IACD,eAACL,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEqF,aAAc,EAAGC,UAAW,IAA/C,UACE,cAACF,EAAA,EAAKK,OAAN,CACEzF,MAAO,CAAE2F,aAAc,GACvBC,cAAc,SACdhH,MAAO,EAHT,SAKE,cAACiH,EAAA,EAAD,CAAM7F,MAAO,CAAEuF,WAAY,GAA3B,SACE,cAACO,EAAA,EAAD,CAAOnH,IAAKX,EAAQ+H,KAAMpI,IAAI,qBAGlC,cAACyH,EAAA,EAAKK,OAAN,CAAaG,cAAc,SAAShH,MAAO,GAA3C,SACE,cAACtB,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEgG,YAAa,EAAGV,UAAW,IAApD,SACGtH,EAAQc,YAIf,eAACsG,EAAA,EAAKM,IAAN,WACG,IACD,eAACpI,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEqF,aAAc,EAAGC,UAAW,GAArD,qBACWtH,EAAQiI,aAGrB,cAACb,EAAA,EAAKM,IAAN,UACE,eAACpI,EAAA,EAAD,CAAQC,GAAG,KAAKyC,MAAO,CAAEqF,aAAc,EAAGC,UAAW,GAArD,uBAEyB,KAAtBtH,EAAQkI,UACP,yCAAIlI,EAAQkI,aAEZ,mDAKR,cAACd,EAAA,EAAKK,OAAN,CAAazF,MAAO,CAAEmG,QAAS,EAAGZ,YAAa,IAA/C,SACE,cAACa,EAAD,CAAKrF,IAAKA,EAAKC,IAAKA,UAK1B,cAAC+D,EAAA,EAAOuB,MAAR,UACY,WAATxI,EACC,qCACE,cAACiH,EAAA,EAAD,CAAQwB,MAAM,QAAQtB,QAAST,GAA/B,oBAGA,cAACO,EAAA,EAAOyB,GAAR,IACA,eAACzB,EAAA,EAAD,CAAQC,OAAK,EAACuB,MAAM,QAAQtB,QAAST,GAArC,sBACW,cAACiC,EAAA,EAAD,CAAM3H,KAAK,aAIxB,qCACE,cAACiG,EAAA,EAAD,CAAQC,OAAK,EAACuB,MAAM,QAAQtB,QAAST,GAArC,oBAGA,cAACO,EAAA,EAAOyB,GAAR,IACA,cAACzB,EAAA,EAAD,CAAQwB,MAAM,QAAQtB,QAAST,GAA/B,2BAMN,eAACtH,EAAA,EAAD,CACE8C,MAAO,CACL0G,WAAY,GACZrB,aAAc,EACdC,UAAW,EACXqB,YAAa,GAEfzB,SAAO,EAPT,UASE,cAAChI,EAAA,EAAKG,KAAN,CACEyB,KAAK,UACLqG,OAAsB,YAAdxC,EACRsC,QAASR,KAEX,cAACvH,EAAA,EAAKG,KAAN,CACEyB,KAAK,UACLqG,OAAsB,YAAdxC,EACRsC,QAASR,QAGE,YAAd9B,GAA4BV,EA6Y3B,oCACGzD,WACC,mCACIiE,GAAqBR,EAUrB,cAAC2C,EAAA,EAAD,CAAMC,SAAO,EAAC/F,KAAK,YATnB,cAAC+G,EAAA,EAAD,CAAMe,OAAK,EAAC5G,MAAO,CAAEC,OAAQ,GAA7B,SACE,cAAC4G,EAAD,CACEhJ,QAASA,EACTC,KAAMA,EACN6E,UAAWA,EACX3E,QAASA,WArZrB,mCACGQ,WACC,eAACqH,EAAA,EAAD,CAAMe,OAAK,EAAC5G,MAAO,CAAEC,OAAQ,GAA7B,UACE,cAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,SACE,eAACjB,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAE8G,cAAe,GAAlC,UACE,cAAC1B,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,eAAC3J,EAAA,EAAKC,OAAN,qBAEE,cAAC2J,EAAA,EAAD,CACEjH,MAAO,CACLkH,aAAc,EACdf,QAAS,OAEXgB,WAAS,EACTC,UAAQ,EACRC,aAAW,kNACXC,QACE,cAAC1C,EAAA,EAAD,CAAM2C,KAAK,QAAQzI,KAAK,gBAT5B,SAYE,cAACmI,EAAA,EAAMD,QAAP,UACE,uPAOE,mBAAGxH,KAAK,mDAAR,SACE,cAACoF,EAAA,EAAD,CAAM9F,KAAK,yBAMrB,cAACzB,EAAA,EAAKmK,YAAN,UACGxJ,EAAQyJ,sBAOnB,cAACrC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,CAAaC,GAAG,IAAhB,qBACA,cAACF,EAAA,EAAKmK,YAAN,UACGxJ,EAAQS,wBASvB,cAAC2G,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,SACE,eAACjB,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEmG,QAAS,GAA5B,UACoB,OAAjBnI,EAAQ0J,KACP,cAACtC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKmK,YAAN,UACY,WAAT1J,EAAA,WACOE,EAAQ0J,KAAKC,iBADpB,sBAEO5I,KAAKC,MACQ,MAAfhB,EAAQ0J,MACRC,iBAJL,sBAWX,cAACvC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKmK,YAAN,qCAMV,cAACpC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,yBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQ4J,WAAWD,iCASlC,cAACE,EAAA,EAAD,CAAS7H,MAAO,CAAEC,OAAQ,KAC1B,cAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,SACE,eAACjB,EAAA,EAAKM,IAAN,WACE,cAACN,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,wBAEA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQ8J,UAAUC,KAAI,SAACC,GAAD,OACrB,cAAC5C,EAAA,EAAKM,IAAN,CACE1F,MAAO,CAAEmG,QAAS,GADpB,SAIG6B,EAAKlJ,MAFDkJ,EAAKlJ,oBAUxB,cAACsG,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,yBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQiK,UAAUF,KAAI,SAACG,GAAD,OACrB,cAAC9C,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEmG,QAAS,GAA5B,SACG+B,GADmCA,sBAWtD,cAACL,EAAA,EAAD,CAAS7H,MAAO,CAAEC,OAAQ,KAC1B,cAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,SACE,cAACjB,EAAA,EAAKM,IAAN,UACE,cAACN,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEsF,UAAW,GAA1B,SACE,eAACjI,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,yBACA,cAACD,EAAA,EAAKmK,YAAN,UACE,eAACpC,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAvB,UACE,eAACmF,EAAA,EAAKM,IAAN,CACE1F,MAAO,CAAE0G,WAAY,EAAGV,YAAa,GACrCK,QAAS,EAFX,UAIE,cAACjB,EAAA,EAAKK,OAAN,CAAazF,MAAO,CAAEmG,QAAS,GAA/B,SACE,+CAEF,cAACf,EAAA,EAAKK,OAAN,UACE,6CAEF,cAACL,EAAA,EAAKK,OAAN,CAAazF,MAAO,CAAE2F,aAAc,GAApC,SACE,gDAGH3H,EAAQmK,WAAWJ,KAAI,SAACK,GAAD,OACtB,eAAChD,EAAA,EAAKM,IAAN,CACEW,QAAS,EACTrG,MAAO,CAAEmG,QAAS,GAFpB,UAKE,cAACf,EAAA,EAAKK,OAAN,UAAc2C,EAAKC,SACnB,cAACjD,EAAA,EAAKK,OAAN,UAAc2C,EAAK/J,OACnB,cAAC+G,EAAA,EAAKK,OAAN,CAAazF,MAAO,CAAE2F,aAAc,GAApC,SACGyC,EAAKtJ,SALHsJ,EAAK/J,8BAmBhC,eAACwH,EAAA,EAAD,CAAMe,OAAK,EAAC5G,MAAO,CAAEC,OAAQ,GAA7B,UACE,cAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,SACE,eAACjB,EAAA,EAAKM,IAAN,WACE,cAACN,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAACC,EAAA,EAAD,CACEjH,MAAO,CACLkH,aAAc,EACdf,QAAS,OAEXgB,WAAS,EACTC,UAAQ,EACRC,aAAW,kNACXC,QAAS,cAACjK,EAAA,EAAKC,OAAN,sBARX,SAUE,cAAC2J,EAAA,EAAMD,QAAP,UACE,uPAME,mBAAGxH,KAAK,mDAAR,SACE,cAACoF,EAAA,EAAD,CAAM9F,KAAK,sBAMnB,cAACzB,EAAA,EAAKmK,YAAN,UACGxJ,EAAQyJ,sBAOnB,cAACrC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,CAAaC,GAAG,IAAhB,qBACA,cAACF,EAAA,EAAKmK,YAAN,UACGxJ,EAAQS,mBAMD,OAAjBT,EAAQ0J,KACP,cAACtC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKmK,YAAN,UACY,WAAT1J,EAAA,WACOE,EAAQ0J,KAAKC,iBADpB,sBAEO5I,KAAKC,MACQ,MAAfhB,EAAQ0J,MACRC,iBAJL,sBAWX,cAACvC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKmK,YAAN,qCAMV,cAACpC,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,yBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQ4J,WAAWD,iCAQlC,cAACE,EAAA,EAAD,CAAS7H,MAAO,CAAEC,OAAQ,KAC1B,eAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,UACE,cAACjB,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,wBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQ8J,UAAUC,KAAI,SAACC,GAAD,OACrB,cAAC5C,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEmG,QAAS,GAA5B,SACG6B,EAAKlJ,MAD8BkJ,EAAKlJ,oBASvD,cAACsG,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,CAAYS,SAAO,EAAnB,SACE,cAAC1J,EAAA,EAAD,CAAM2C,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAAC5C,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,yBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQiK,UAAUF,KAAI,SAACG,GAAD,OACrB,cAAC9C,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEmG,QAAS,GAA5B,SACG+B,GADmCA,oBAWpD,cAACL,EAAA,EAAD,CAAS7H,MAAO,CAAEC,OAAQ,KAC1B,eAACmF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAKoG,QAAS,EAArC,UACE,cAACjB,EAAA,EAAKM,IAAN,CAAU1F,MAAO,CAAEgG,YAAa,GAAIc,cAAe,GAAnD,SACE,cAACxJ,EAAA,EAAD,2BAGF,cAAC8H,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,UACE,cAACjJ,EAAA,EAAD,UACE,eAACA,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,sBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQmK,WAAWJ,KAAI,SAACK,GAAD,OACtB,cAAChD,EAAA,EAAKM,IAAN,CACEW,QAAS,EACTrG,MAAO,CAAEmG,QAAS,GAFpB,SAKGiC,EAAKC,QAFDD,EAAKC,sBAUxB,cAACjD,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,UACE,cAACjJ,EAAA,EAAD,UACE,eAACA,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,oBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQmK,WAAWJ,KAAI,SAACK,GAAD,OACtB,cAAChD,EAAA,EAAKM,IAAN,CACEW,QAAS,EACTrG,MAAO,CAAEmG,QAAS,GAFpB,SAKGiC,EAAK/J,MAFD+J,EAAK/J,oBAUxB,cAAC+G,EAAA,EAAKK,OAAN,UACE,cAACpI,EAAA,EAAKiJ,MAAN,UACE,cAACjJ,EAAA,EAAD,UACE,eAACA,EAAA,EAAK2J,QAAN,WACE,cAAC3J,EAAA,EAAKC,OAAN,mBACA,cAACD,EAAA,EAAKmK,YAAN,UACGxJ,EAAQmK,WAAWJ,KAAI,SAACK,GAAD,OACtB,cAAChD,EAAA,EAAKM,IAAN,CACEW,QAAS,EACTrG,MAAO,CAAEmG,QAAS,GAFpB,SAKGiC,EAAKtJ,MAFDsJ,EAAKtJ,kCC3jB3BwJ,EArFG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClCC,EAAWC,mBAUjB,OARA1F,qBAAU,gBACU2F,IAAdH,GACuB,IAArBA,EAAU7E,QACZ8E,EAASpK,QAAQuK,SAGpB,CAACJ,IAEGjK,WACL,cAACtB,EAAA,EAAD,CAAMC,MAAM,MAAMiK,UAAQ,EAA1B,SACE,eAACtC,EAAA,EAAD,WACE,eAAC5H,EAAA,EAAKG,KAAN,CACE2C,MAAO,CAAEgG,YAAa,EAAGL,aAAc,EAAGH,YAAa,IACvDsD,QAAM,EAFR,UAIE,cAAClE,EAAA,EAAD,CAAM9F,KAAK,QAAQyH,MAAM,OAAOgB,KAAK,UACrC,eAACrK,EAAA,EAAKA,KAAN,WACE,cAACA,EAAA,EAAKG,KAAN,CAAW2C,MAAO,CAAEmG,QAAS,GAA7B,mBACA,cAACjJ,EAAA,EAAKG,KAAN,CACE2C,MAAO,CACLgG,YAAa,EACbU,WAAY,EACZI,cAAe,EACfnB,aAAc,GALlB,6BAaJ,cAACzI,EAAA,EAAKG,KAAN,CAAW0L,QAAM,EAAjB,SACE,uBACEC,KAAK,OACLC,IAAKP,EACLQ,MAAOX,EACPY,SAAUX,EACVY,YAAY,6BAGhB,cAAClM,EAAA,EAAKA,KAAN,CAAWsG,SAAS,QAApB,SACE,cAACtG,EAAA,EAAKG,KAAN,CACE2C,MAAO,CAAEgG,YAAa,EAAGL,aAAc,GACvCpI,GAAG,IACHiC,KAAK,sDAHP,SAKE,cAACoF,EAAA,EAAD,CAAM9F,KAAK,SAASyI,KAAK,iBAMjC,mCACE,cAACrK,EAAA,EAAD,CAAMC,MAAM,MAAMiK,UAAQ,EAA1B,SACE,eAACtC,EAAA,EAAD,CAAW8B,OAAK,EAAhB,UACE,eAAC1J,EAAA,EAAKG,KAAN,CAAWyL,QAAM,EAAjB,UACE,cAAClE,EAAA,EAAD,CAAM9F,KAAK,QAAQyH,MAAM,OAAOgB,KAAK,QACrC,oDAEF,cAACrK,EAAA,EAAKG,KAAN,UACE,uBACE2L,KAAK,OACLC,IAAKP,EACLQ,MAAOX,EACPY,SAAUX,EACVY,YAAY,6BAGhB,cAAClM,EAAA,EAAKA,KAAN,CAAWsG,SAAS,QAApB,SACE,cAACtG,EAAA,EAAKG,KAAN,CACEE,GAAG,IACHiC,KAAK,sDAFP,SAIE,cAACoF,EAAA,EAAD,CAAM9F,KAAK,SAASyI,KAAK,oB,iBC2PxB8B,EAlUG,WAAO,IAAD,EACQpI,mBAAS,MADjB,mBACfjD,EADe,KACNsL,EADM,OAEcrI,mBAAS,OAFvB,mBAEflD,EAFe,KAEHuE,EAFG,OAGIrB,mBAAS,IAHb,mBAGfsH,EAHe,KAGRrG,EAHQ,OAIMjB,mBAAS,OAJf,mBAIfgF,EAJe,KAIP9D,EAJO,OAKYlB,mBAAS,IALrB,mBAKfiF,EALe,KAKJ9D,EALI,OAMYnB,oBAAS,GANrB,mBAMfgB,EANe,KAMJI,EANI,KAQhBkH,EAAoBC,EAAcC,QAAO,SAACC,GAC9C,OAAOA,EAAE5K,KAAK6K,cAAcC,WAAWrB,EAAMoB,kBAGzCE,EACO,QAAX5D,EACIsD,EACAA,EAAkBE,QAAO,SAACC,GACxB,MAAe,UAAXzD,GAAiC,UAAXA,EACJ,KAAbyD,EAAEzD,OAEJyD,EAAEzD,OAAO0D,gBAAkB1D,EAAO0D,iBAG3CG,EACU,KAAd5D,EACI2D,EACAA,EAAeJ,QAAO,SAACM,GAAD,OAAOA,EAAE7D,YAAcA,KAEnDjD,qBAAU,WACyB,IAA7B6G,EAAkBlG,QACpB1B,EAAS4H,EAAkB,GAAGhL,QAE/B,CAACgL,IAEJ7G,qBAAU,WACM,KAAVsF,GACFrF,IACGC,IADH,gDACgDoF,IAC7CnF,MAAK,SAAC4G,GACLV,EAAWU,EAAO1G,KAAK,IACvBjB,GAAa,QAGlB,CAACkG,IAEJ,IAMM0B,EAAc,SAACP,GAClBzH,GAAYI,GAAa,GAC1BH,EAASwH,EAAE5K,OAcPoL,EAAoB,SAACxF,EAAD,GAAkB,IAAZ5F,EAAW,EAAXA,KAC9BsD,EAAa,IACbD,EAAUrD,GACVwD,EAAcxD,IA8BVqL,EAAgBC,EAAQX,QAAO,SAACM,GAAD,OACnCA,EAAE9D,SAAWlI,EAAagM,EAAI,MAG1BM,EAAiB,WACrB,OAAO7L,WACL,8BACGsL,EAAkB/B,KAAI,SAAC2B,GACtB,OACE,cAACtE,EAAA,EAAKM,IAAN,CAAqB1F,MAAO,CAAEsF,UAAW,EAAGD,aAAc,GAA1D,SACE,eAACD,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,GAAvB,UACE,cAACmF,EAAA,EAAKK,OAAN,CACE7G,MAAO,EACPoB,MAAO,CACLgG,YAAa,EACbU,WAAY,EACZI,cAAe,EACfnB,aAAc,GANlB,SASE,cAACG,EAAA,EAAD,CAAOwE,UAAQ,EAAC/C,KAAK,OAAO5I,IAAK+K,EAAE3D,KAAMpI,IAAI,mBAE/C,cAACyH,EAAA,EAAKK,OAAN,CAAa7G,MAAO,GAAIoB,MAAO,CAAE0G,WAAY,GAA7C,SACGgD,EAAE5K,OAEL,cAACsG,EAAA,EAAKK,OAAN,CAAa7G,MAAO,EAAGoB,MAAO,CAAEmG,QAAS,GAAzC,SACE,cAACpB,EAAA,EAAD,CAAQE,QAAS,kBAAMgF,EAAYP,IAAInC,KAAK,OAAOvC,OAAK,EAAxD,2BAjBS0E,EAAEjM,SA2BvB,mCACGqM,EAAkB/B,KAAI,SAAC2B,GACtB,OACE,eAACtE,EAAA,EAAKM,IAAN,CACEE,cAAc,SACdS,QAAS,EAETrG,MAAO,CACLmG,QAAS,GALb,UAQE,cAACf,EAAA,EAAKK,OAAN,CAAa7G,MAAO,EAApB,SACE,cAACkH,EAAA,EAAD,CAAOyB,KAAK,OAAO5I,IAAK+K,EAAE3D,KAAMpI,IAAI,eAAe2M,UAAQ,MAE7D,cAAClF,EAAA,EAAKK,OAAN,CAAa7G,MAAO,GAApB,SAAyB8K,EAAE5K,OAC3B,cAACsG,EAAA,EAAKK,OAAN,CAAa7G,MAAO,EAApB,SACE,cAACmG,EAAA,EAAD,CAAQE,QAAS,kBAAMgF,EAAYP,IAAI1E,OAAK,EAACuF,SAAO,EAApD,yBAVGb,EAAEjM,UAqBb+M,EAAgB,WACpB,OAAOhM,WACL,8BACE,cAACtB,EAAA,EAAD,CACE8C,MAAO,CAAEyK,IAAK,GAAI7L,MAAO,QACzBzB,MAAM,QACNoK,KAAK,OACLrC,QAAQ,QACRwF,UAAQ,EACRC,YAAU,EANZ,SAQGP,EAAQrC,KAAI,SAACgC,GAAD,OACX,gCACE,cAAC7M,EAAA,EAAKG,KAAN,CACEyB,KAAMiL,EAAE9D,OACRd,OAAQpH,IAAegM,EAAE9D,OACzBhB,QAASiF,EAHX,SAKGH,EAAEjL,OAEJiL,EAAEa,WAAWhH,OAAS,GAAK7F,IAAegM,EAAE9D,OAC3C,8BACG8D,EAAEa,WAAW7C,KAAI,SAAC8C,GAAD,OAChB,cAAC3N,EAAA,EAAD,CAAMqK,KAAK,OAAX,SACE,cAACrK,EAAA,EAAKG,KAAN,CACEyB,KAAM+L,EACN5F,QAAS,WACP7C,EAAayI,IAHjB,SAMGA,KAPkBA,QAa3B,+BAxBMd,EAAEtM,WA+BlB,qCACE,cAACP,EAAA,EAAD,CAAM4N,SAAS,MAAMC,OAAQ,EAA7B,SACGX,EAAQrC,KAAI,SAACgC,GAAD,OACX,cAAC7M,EAAA,EAAKG,KAAN,CAEEyB,KAAMiL,EAAE9D,OACRd,OAAQpH,IAAegM,EAAE9D,OACzBhB,QAASiF,EAJX,SAMGH,EAAEjL,MALEiL,EAAEtM,SASG,QAAfM,GACc,UAAfA,GACe,UAAfA,EACE,cAACb,EAAA,EAAD,CAAM4N,SAAS,SAASC,OAAQZ,EAAc,GAAGS,WAAWhH,OAA5D,SACGwG,EAAQrC,KAAI,SAACgC,GACZ,OAAOhM,IAAegM,EAAE9D,OACtB8D,EAAEa,WAAW7C,KAAI,SAACiD,GAAD,OACf,cAAC9N,EAAA,EAAKG,KAAN,CAEEyB,KAAMkM,EACN7F,OAAQpH,IAAeiN,EACvB/F,QAAS,WACP7C,EAAa4I,KAJVA,MAST,kCAKN,iCAMR,OACE,qCACE,cAAC,EAAD,CACEzC,MAAOA,EACPrG,SAAUA,EACVD,UAAWA,EACXI,aAAcA,EACdmG,aAjMe,SAAC9D,GAJpBvC,EAAU,OACVC,EAAa,IAKZH,GAAYI,GAAa,GAC1BH,EAASwC,EAAEjF,OAAOyJ,QA+LdT,UAAWqB,IAEb,cAAChF,EAAA,EAAD,CAAW8B,OAAK,EAAhB,SACgC,IAA7BkD,EAAkBlG,OACjB,qCACE,2CACA,cAACmB,EAAA,EAAD,CAAQE,QAxNJ,WACZ/C,EAAS,IACTC,EAAU,OACVC,EAAa,KAqNL,2BAGF,mCACgC,IAA7B0H,EAAkBlG,OACjB,mCACe,OAAZ5F,EACC,mCACIiE,EAWA,6BAVA,cAAC,EAAD,CACEC,SAAUA,EACVC,UAAWA,EACXF,UAAWA,EACXjE,QAASA,EACToE,aAAcA,EACdC,aAAcA,EACdC,cAAeA,MAOrB,+BAIJ,mCACG9D,WACC,mCACE,eAAC4G,EAAA,EAAD,WACE,cAACA,EAAA,EAAKK,OAAN,CACEzF,MAAO,CAAEgG,YAAa,EAAGL,aAAc,GACvC/G,MAAO,GAFT,SAIE,cAACyL,EAAD,MAEF,cAACjF,EAAA,EAAKK,OAAN,CACEzF,MAAO,CAAEgG,YAAa,EAAGL,aAAc,GACvC/G,MAAO,EAFT,SAIE,cAAC4L,EAAD,WAKN,mCACE,eAACpF,EAAA,EAAD,CAAMpF,MAAO,CAAEC,OAAQ,EAAGkG,QAAS,GAAK1I,GAAG,QAA3C,UACE,cAAC+M,EAAD,IACA,cAACH,EAAD,mB,OC5SPY,MAXf,WACE,OACE,sBAAKjL,MAAO,CAAE8G,cAAe,SAA7B,UACE,cAAC,EAAD,IACA,cAAChC,EAAA,EAAD,CAAW8B,OAAK,EAAhB,SACE,cAAC,EAAD,U,OCNRsE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a8fed4f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Menu, Header } from 'semantic-ui-react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <Menu fixed=\"bottom\" className=\"ui fluid three item menu\">\r\n        <Menu.Item>\r\n          <Header as=\"h6\">Made by Andrea Crego</Header>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import clearDay from './day.svg'\nimport clearNight from './night.svg'\n\nimport cloudyDay from './cloudy-day-1.svg'\nimport cloudyNight from './cloudy-night-1.svg'\n\nimport scatteredCloudsDay from './clouds-scattered-day.svg'\nimport scatteredCloudsNight from './clouds-scattered-night.svg'\n\nimport brokenCloudsDay from './broken-clouds-day.svg'\nimport brokenCloudsNight from './broken-clouds-night.svg'\n\nimport showerDay from './rainy-1.svg'\nimport showerNight from './rainy-4.svg'\n\nimport rainyDay from './rainy-3.svg'\nimport rainyNight from './rainy-5.svg'\n\nimport thunderDay from './thunder-day.svg'\nimport thunderNight from './thunder-night.svg'\n\nimport snowyDay from './snowy-3.svg'\nimport snowyNight from './snowy-6.svg'\n\nimport mistDay from './mist-day.svg'\nimport mistNight from './mist-night.svg'\n\nconst Images = {\n  '01d': {\n    id: '01d',\n    path: clearDay,\n    alt: 'clear day',\n  },\n  '01n': {\n    id: '01n',\n    path: clearNight,\n    alt: 'clear night',\n  },\n  '02d': {\n    id: '02d',\n    path: cloudyDay,\n    alt: 'cloudy day',\n  },\n\n  '02n': {\n    id: '02n',\n    path: cloudyNight,\n    alt: 'cloudy night',\n  },\n\n  '03d': {\n    id: '03d',\n    path: scatteredCloudsDay,\n    alt: 'scattered clouds day',\n  },\n  '03n': {\n    id: '03n',\n    path: scatteredCloudsNight,\n    alt: 'scattered clouds night',\n  },\n  '04d': {\n    id: '04d',\n    path: brokenCloudsDay,\n    alt: 'broken clouds day',\n  },\n\n  '04n': {\n    id: '04n',\n    path: brokenCloudsNight,\n    alt: 'broken clouds night',\n  },\n\n  '09d': {\n    id: '09d',\n    path: showerDay,\n    alt: 'shower day',\n  },\n  '09n': {\n    id: '09n',\n    path: showerNight,\n    alt: 'shower night',\n  },\n  '10d': {\n    id: '10d',\n    path: rainyDay,\n    alt: 'rainy day',\n  },\n  '10n': {\n    id: '10n',\n    path: rainyNight,\n    alt: 'rainy night',\n  },\n  '11d': {\n    id: '11d',\n    path: thunderDay,\n    alt: 'thunder day',\n  },\n  '11n': {\n    id: '11n',\n    path: thunderNight,\n    alt: 'thunder night',\n  },\n  '13d': {\n    id: '13d',\n    path: snowyDay,\n    alt: 'snowy day',\n  },\n  '13n': {\n    id: '13n',\n    path: snowyNight,\n    alt: 'snowy night',\n  },\n  '50d': {\n    id: '50d',\n    path: mistDay,\n    alt: 'mist day',\n  },\n  '50n': {\n    id: '50n',\n    path: mistNight,\n    alt: 'mist night',\n  },\n}\n\nexport default Images\n","export default __webpack_public_path__ + \"static/media/day.096b1175.svg\";","export default __webpack_public_path__ + \"static/media/night.3a5b9f57.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-1.485db1d7.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night-1.31db38af.svg\";","export default __webpack_public_path__ + \"static/media/clouds-scattered-day.4ebe4308.svg\";","export default __webpack_public_path__ + \"static/media/clouds-scattered-night.b2fdabaa.svg\";","export default __webpack_public_path__ + \"static/media/broken-clouds-day.93d9e05d.svg\";","export default __webpack_public_path__ + \"static/media/broken-clouds-night.0ee7ff13.svg\";","export default __webpack_public_path__ + \"static/media/rainy-1.ca51ee00.svg\";","export default __webpack_public_path__ + \"static/media/rainy-4.9145687f.svg\";","export default __webpack_public_path__ + \"static/media/rainy-3.c87f2444.svg\";","export default __webpack_public_path__ + \"static/media/rainy-5.3123af7a.svg\";","export default __webpack_public_path__ + \"static/media/thunder-day.3d169914.svg\";","export default __webpack_public_path__ + \"static/media/thunder-night.f31c3284.svg\";","export default __webpack_public_path__ + \"static/media/snowy-3.21145f25.svg\";","export default __webpack_public_path__ + \"static/media/snowy-6.f096b2f1.svg\";","export default __webpack_public_path__ + \"static/media/mist-day.b3406414.svg\";","export default __webpack_public_path__ + \"static/media/mist-night.b3894aee.svg\";","import React from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { Segment } from 'semantic-ui-react'\nimport moment from 'moment'\nimport Images from '../images/weather-animated/index'\nimport '../owm-left.css'\nimport '../owm-right.css'\n\nfunction WeatherWidget({ weather, unit, activeItem, country }) {\n  const tempStyle = {\n    fontSize: '12px',\n    stroke: 'rgb(51, 51, 51)',\n    fill: 'rgb(51, 51, 51)',\n  }\n\n  const code = weather.current.weather[0].icon\n  const icon = Images[code].path\n\n  return isMobile ? (\n    <div className=\"widget-right weather-right--type1 widget-right--brown\">\n      <div className=\"widget-right__header widget-right__header--brown\">\n        <div className=\"widget-right__layout\">\n          <div>\n            <h2 className=\"widget-right__title\">{country.capital} </h2>\n            <p>{weather.current.weather[0].description} </p>\n          </div>\n        </div>\n        <img\n          src={icon}\n          width=\"128\"\n          height=\"128\"\n          alt={`Weather in ${country.name}`}\n          className=\"weather-right__icon\"\n        />\n      </div>\n      <div className=\"weather-right weather-right--brown\">\n        <div className=\"weather-right__layout\">\n          <div className=\"weather-right__temperature\">\n            {Math.round(weather.current.temp)}\n            <span>°{unit === 'metric' ? 'C' : 'F'}</span>\n          </div>\n          <div>\n            <div className=\"weather-right-card\">\n              <table className=\"weather-right__table\">\n                <tbody>\n                  <tr className=\"weather-right__items\">\n                    <th colSpan=\"2\" className=\"weather-right__item\">\n                      Details\n                    </th>\n                  </tr>\n                  <tr className=\"weather-right__items\">\n                    <td className=\"weather-right__item\">Feels like</td>\n                    <td className=\"weather-right__item\">\n                      {Math.round(weather.current.feels_like)}\n                      <span>°{unit === 'metric' ? 'C' : 'F'}</span>\n                    </td>\n                  </tr>\n                  <tr className=\"weather-right__items\">\n                    <td className=\"weather-right__item\">Clouds</td>\n                    <td className=\"weather-right__item\">\n                      {weather.current.clouds}\n                      <span>%</span>\n                    </td>\n                  </tr>\n                  <tr className=\"weather-right__items\">\n                    <td className=\"weather-right__item\">Wind</td>\n                    <td className=\"weather-right__item\">\n                      {Math.round(weather.current.wind_speed)}\n                      {activeItem === 'metric' ? 'm/s' : 'mph'}\n                    </td>\n                  </tr>\n                  <tr className=\"weather-right-card__items\">\n                    <td className=\"weather-right__item\">Humidity</td>\n                    <td className=\"weather-right__item\">\n                      {weather.current.humidity}%\n                    </td>\n                  </tr>\n                  <tr className=\"weather-right-card__items\">\n                    <td className=\"weather-right__item\">Pressure</td>\n                    <td className=\"weather-right__item\">\n                      {weather.current.pressure} hPa\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"widget-right__footer widget-right__footer--brown\">\n        <div className=\"widget-right__layout\">\n          <a\n            href=\"https://openweathermap.org/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <div className=\"widget-right__logo_black_small\"></div>\n          </a>\n          <div className=\"widget-right__date\">\n            {moment.unix(weather.current.dt).format('YYYY-MM-DD, h:mm a')}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div>\n      <div className=\"widget-left-menu widget-left-menu--brown\">\n        <div className=\"widget-left-menu__layout\">\n          <h2 className=\"widget-left-menu__header\">{country.capital} </h2>\n          <a\n            href=\"https://openweathermap.org/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <div className=\"widget-left-menu__logo_black\"></div>\n          </a>\n        </div>\n      </div>\n      <div\n      >\n        <Segment\n          style={{ margin: 0, border: 0, boxShadow: 'none' }}\n          floated=\"left\"\n        >\n          <div className=\"weather-left-card__row1\">\n            <img\n              src={`https://openweathermap.org/themes/openweathermap/assets/vendor/owm/img/widgets/${weather.current.weather[0].icon}.png`}\n              width=\"128\"\n              height=\"128\"\n              alt={`Weather in ${country.name}`}\n              className=\"weather-left-card__img\"\n            />\n            <div className=\"weather-left-card__col\">\n              <p className=\"weather-left-card__number\">\n                {Math.round(weather.current.temp)}\n                <span>°{unit === 'metric' ? 'C' : 'F'}</span>\n              </p>\n            </div>\n          </div>\n          <div className=\"weather-left-card__row2\">\n            <p className=\"weather-left-card__means\">\n              {weather.current.weather[0].description}\n            </p>\n            <p className=\"weather-left-card__wind\">\n              Wind: {Math.round(weather.current.wind_speed)}\n              {unit === 'metric' ? ' m/s' : ' mph'}\n            </p>\n          </div>\n        </Segment>\n\n        <Segment\n          style={{ margin: 0, border: 0, boxShadow: 'none' }}\n          floated=\"right\"\n        >\n          <div className=\"widget-left__calendar\">\n            <ul className=\"calendar\">\n              <li className=\"calendar__item\">\n                Today\n                <br />\n                {moment.unix(weather.current.dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.current.weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt=\"Today\"\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[1].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[1].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[1].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[1].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[2].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[2].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[2].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[2].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[3].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[3].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[3].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[3].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[4].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[4].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[4].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[4].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[5].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[5].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[5].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[5].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[6].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[6].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[6].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[6].dt).format('ddd')}\n                />\n              </li>\n              <li className=\"calendar__item\">\n                {moment.unix(weather.daily[7].dt).format('ddd')}\n                <br /> {moment.unix(weather.daily[7].dt).format('MMM D')}\n                <img\n                  src={`https://openweathermap.org/img/w/${weather.daily[7].weather[0].icon}.png`}\n                  width=\"32\"\n                  height=\"32\"\n                  alt={moment.unix(weather.daily[7].dt).format('ddd')}\n                />\n              </li>\n            </ul>\n            <div id=\"graphic2\" className=\"widget-left__graphic\">\n              <svg\n                className=\"axis\"\n                width=\"420\"\n                height=\"79\"\n                fill=\"#FEB020\"\n                style={{ stroke: 'rgb(255, 255, 255)' }}\n              >\n                <g>\n                  <path\n                    d=\"M15,23.615384615384613L72.14285714285714,30.42307692307692L129.28571428571428,30.42307692307692L186.42857142857142,21.346153846153847L243.57142857142856,41.76923076923077L300.7142857142857,44.03846153846154L357.85714285714283,39.5L415,34.96153846153847L415,53.11538461538461L357.85714285714283,53.11538461538461L300.7142857142857,57.65384615384615L243.57142857142856,53.11538461538461L186.42857142857142,48.57692307692308L129.28571428571428,50.84615384615385L72.14285714285714,50.84615384615385L15,44.03846153846154L15,23.615384615384613\"\n                    style={{\n                      strokeWidth: '1px',\n                      stroke: 'rgb(254, 176, 32)',\n                      fill: 'rgb(254, 176, 32)',\n                      opacity: 1,\n                    }}\n                  ></path>\n                </g>\n                {/* today */}\n                <text\n                  x=\"15\"\n                  y=\"19.115384615384613\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[0].temp.max)}°\n                </text>\n                <text\n                  x=\"15\"\n                  y=\"61.03846153846154\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[0].temp.min)}°\n                </text>\n                {/* day 2 */}\n                <text\n                  x=\"72.14285714285714\"\n                  y=\"25.92307692307692\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[1].temp.max)}°\n                </text>\n                <text\n                  x=\"72.14285714285714\"\n                  y=\"67.84615384615384\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[1].temp.min)}°\n                </text>\n                {/* day 3 */}\n                <text\n                  x=\"129.28571428571428\"\n                  y=\"25.92307692307692\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[2].temp.max)}°\n                </text>\n                <text\n                  x=\"129.28571428571428\"\n                  y=\"67.84615384615384\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[2].temp.min)}°\n                </text>\n                {/* day 4 */}\n                <text\n                  x=\"186.42857142857142\"\n                  y=\"16.846153846153847\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[3].temp.max)}°\n                </text>\n                <text\n                  x=\"186.42857142857142\"\n                  y=\"65.57692307692308\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[3].temp.min)}°\n                </text>\n                {/* day 5 */}\n                <text\n                  x=\"243.57142857142856\"\n                  y=\"37.26923076923077\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[4].temp.max)}°\n                </text>\n                <text\n                  x=\"243.57142857142856\"\n                  y=\"70.11538461538461\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[4].temp.min)}°\n                </text>\n                {/* day 6 */}\n                <text\n                  x=\"300.7142857142857\"\n                  y=\"39.53846153846154\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[5].temp.max)}°\n                </text>\n                <text\n                  x=\"300.7142857142857\"\n                  y=\"74.65384615384616\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[5].temp.min)}°\n                </text>\n                {/* day 7 */}\n                <text\n                  x=\"357.85714285714283\"\n                  y=\"35\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[6].temp.max)}°\n                </text>\n                <text\n                  x=\"357.85714285714283\"\n                  y=\"70.11538461538461\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[6].temp.min)}°\n                </text>\n                {/* day 8 */}\n                <text\n                  x=\"415\"\n                  y=\"30.461538461538467\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[7].temp.max)}°\n                </text>\n                <text\n                  x=\"415\"\n                  y=\"70.11538461538461\"\n                  textAnchor=\"middle\"\n                  style={tempStyle}\n                >\n                  {Math.round(weather.daily[7].temp.min)}°\n                </text>\n              </svg>\n            </div>\n          </div>\n        </Segment>\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherWidget\n","import React, { useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactMapGL from 'react-map-gl'\n\nconst MapView = ({ lat, lng }) => {\n  const [viewport, setViewport] = useState({\n    latitude: 45,\n    longitude: 73,\n    zoom: 7,\n  })\n\n  const mapStyle = {\n    width: '100%',\n    height: 350,\n  }\n\n  const eventRecognizerOptions = isMobile\n    ? {\n        pan: { threshold: 10 },\n        tap: { threshold: 5 },\n      }\n    : {}\n\n  return (\n    <div>\n      {!isNaN(lat) ? (\n        <ReactMapGL\n          eventRecognizerOptions={eventRecognizerOptions}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n          mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n          {...mapStyle}\n          {...viewport}\n          onViewportChange={(viewport) => {\n            setViewport({ ...viewport, latitude: lat, longitude: lng })\n          }}\n        />\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  )\n}\n\nexport default MapView\n","import React, { useState, useEffect } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport {\n  Divider,\n  Menu,\n  Container,\n  Icon,\n  Image,\n  Button,\n  Card,\n  Popup,\n  Grid,\n  Header,\n  Item,\n  Flag,\n} from 'semantic-ui-react'\nimport axios from 'axios'\nimport Weather from '../components/Weather'\nimport Map from '../Map'\n\nconst Country = ({\n  country,\n  isLoading,\n  setInput,\n  setRegion,\n  setSubRegion,\n  setIsLoading,\n  setActiveItem,\n}) => {\n  const [weather, setWeather] = useState({})\n  const [unit, setUnit] = useState('metric')\n  const [isWeatherLoading, setIsWeatherLoading] = useState(true)\n  const [activeTab, setActiveTab] = useState('Details')\n  const [activeTab2, setActiveTab2] = useState('Flag')\n  const [location, setLocation] = useState({})\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://geocode.search.hereapi.com/v1/geocode?q=${country.capital},${country.name}&apiKey=${process.env.REACT_APP_HERE_KEY}`\n      )\n      .then((res) => {\n        setLocation(res.data.items[0].position)\n      })\n  }, [country])\n  const lat = Math.round(country.latlng[0])\n  const lng = Math.round(country.latlng[1])\n\n  useEffect(() => {\n    if (Object.entries(location).length > 0) {\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly&appid=${process.env.REACT_APP_OPENWEATHER_KEY}&units=${unit}`\n\n      if (\n        unit === 'metric' &&\n        window.localStorage.getItem(`${country.name} weather in metric`) !==\n          null\n      ) {\n        setIsWeatherLoading(true)\n        setWeather(\n          JSON.parse(\n            window.localStorage.getItem(`${country.name} weather in metric`)\n          )\n        )\n        setIsWeatherLoading(false)\n        setIsLoading(false)\n\n        setTimeout(() => {\n          window.localStorage.removeItem(`${country.name} weather in metric`)\n        }, 10000)\n      } else if (\n        unit === 'imperial' &&\n        window.localStorage.getItem(`${country.name} weather in imperial`) !==\n          null\n      ) {\n        setWeather(\n          JSON.parse(\n            window.localStorage.getItem(`${country.name} weather in imperial`)\n          )\n        )\n        setIsWeatherLoading(false)\n        setIsLoading(false)\n        setTimeout(() => {\n          window.localStorage.removeItem(`${country.name} weather in imperial`)\n        }, 10000)\n      } else {\n        axios.get(url).then((response) => {\n          setWeather(response.data)\n          setIsWeatherLoading(false)\n          setIsLoading(false)\n          window.localStorage.setItem(\n            `${country.name} weather in ${unit}`,\n            JSON.stringify(response.data)\n          )\n        })\n      }\n    }\n  }, [location, unit])\n\n  const reset = () => {\n    setInput('')\n    setRegion('All')\n    setSubRegion('')\n    setActiveItem('All')\n  }\n\n  const handleUnitButtonClick = () => {\n    if (unit === 'metric') {\n      setIsWeatherLoading(true)\n      setUnit('imperial')\n      return true\n    }\n    setIsWeatherLoading(true)\n    setUnit('metric')\n    return false\n  }\n\n  const handleItemClick = (e, { name }) => {\n    setActiveTab(name)\n  }\n\n  const handleItemClick2 = (e, { name }) => {\n    setActiveTab2(name)\n  }\n\n  return !isLoading ? (\n    <>\n      <Container>\n        <Button basic onClick={reset}>\n          Back\n        </Button>\n        {isMobile ? (\n          <>\n            <Menu tabular>\n              <Menu.Item\n                active\n                name=\"Flag\"\n                active={activeTab2 === 'Flag'}\n                onClick={handleItemClick2}\n              />\n              <Menu.Item\n                name=\"Map\"\n                active={activeTab2 === 'Map'}\n                onClick={handleItemClick2}\n              />\n            </Menu>\n\n            <Grid style={{ marginBottom: 25, marginTop: 0, marginLeft: 0, marginRight:0 }}>\n              {activeTab2 === 'Flag' ? (\n                <Grid.Column>\n                  <Grid.Row style={{ marginBottom: 0, marginTop: 10 }}>\n                    <Grid.Column\n                      style={{ paddingRight: 0 }}\n                      verticalAlign=\"middle\"\n                      width={2}\n                    >\n                      <Card style={{ marginLeft: 1 }}>\n                        <Image src={country.flag} alt=\"country flag\" />\n                      </Card>\n                    </Grid.Column>\n                    <Grid.Column verticalAlign=\"middle\" width={14}>\n                      <Header as=\"h1\" style={{ paddingLeft: 0, marginTop: 10 }}>\n                        {country.name}\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row>\n                    {' '}\n                    <Header as=\"h3\" style={{ marginBottom: 5, marginTop: 0 }}>\n                      Region: {country.region}\n                    </Header>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Header as=\"h3\" style={{ marginBottom: 5, marginTop: 0 }}>\n                      Subregion:\n                      {country.subregion !== '' ? (\n                        <> {country.subregion}</>\n                      ) : (\n                        <>N/A</>\n                      )}\n                    </Header>\n                  </Grid.Row>\n                </Grid.Column>\n              ) : (\n                <Grid.Column style={{ padding: 0, marginLeft: 0 }}>\n                  <Container style={{ width: '40vw', height: '45vh' }}>\n                    <Map lat={lat} lng={lng} />\n                  </Container>\n                </Grid.Column>\n              )}\n            </Grid>\n          </>\n        ) : (\n          // desktop\n          <Grid style={{ margin: 0 }} columns={2}>\n            <Grid.Column>\n              {' '}\n              <Grid.Row style={{ marginBottom: 0, marginTop: 10 }}>\n                <Grid.Column\n                  style={{ paddingRight: 0 }}\n                  verticalAlign=\"middle\"\n                  width={2}\n                >\n                  <Card style={{ marginLeft: 1 }}>\n                    <Image src={country.flag} alt=\"country flag\" />\n                  </Card>\n                </Grid.Column>\n                <Grid.Column verticalAlign=\"middle\" width={14}>\n                  <Header as=\"h1\" style={{ paddingLeft: 0, marginTop: 10 }}>\n                    {country.name}\n                  </Header>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                {' '}\n                <Header as=\"h3\" style={{ marginBottom: 5, marginTop: 0 }}>\n                  Region: {country.region}\n                </Header>\n              </Grid.Row>\n              <Grid.Row>\n                <Header as=\"h3\" style={{ marginBottom: 5, marginTop: 0 }}>\n                  Subregion:\n                  {country.subregion !== '' ? (\n                    <> {country.subregion}</>\n                  ) : (\n                    <>N/A</>\n                  )}\n                </Header>\n              </Grid.Row>\n            </Grid.Column>\n            <Grid.Column style={{ padding: 0, marginLeft: -10 }}>\n              <Map lat={lat} lng={lng} />\n            </Grid.Column>\n          </Grid>\n        )}\n\n        <Button.Group>\n          {unit === 'metric' ? (\n            <>\n              <Button color=\"black\" onClick={handleUnitButtonClick}>\n                Metric\n              </Button>\n              <Button.Or />\n              <Button basic color=\"black\" onClick={handleUnitButtonClick}>\n                American <Flag name=\"us\" />\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button basic color=\"black\" onClick={handleUnitButtonClick}>\n                Metric\n              </Button>\n              <Button.Or />\n              <Button color=\"black\" onClick={handleUnitButtonClick}>\n                Imperial\n              </Button>\n            </>\n          )}\n        </Button.Group>\n        <Menu\n          style={{\n            paddingTop: 10,\n            marginBottom: 0,\n            marginTop: 0,\n            borderWidth: 0,\n          }}\n          tabular\n        >\n          <Menu.Item\n            name=\"Details\"\n            active={activeTab === 'Details'}\n            onClick={handleItemClick}\n          />\n          <Menu.Item\n            name=\"Weather\"\n            active={activeTab === 'Weather'}\n            onClick={handleItemClick}\n          />\n        </Menu>\n        {activeTab === 'Details' && !isLoading ? (\n          <>\n            {isMobile ? (\n              <Card fluid style={{ margin: 0 }}>\n                <Grid style={{ margin: 0 }} columns={2}>\n                  <Grid.Row style={{ paddingBottom: 0 }}>\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header>\n                              Endonym\n                              <Popup\n                                style={{\n                                  borderRadius: 0,\n                                  padding: '2em',\n                                }}\n                                hoverable\n                                inverted\n                                aria-label=\"An endonym (also known as autonym) is a common, internal name for a geographical place, group of people, or a language/dialect, that is used only inside that particular place, group, or linguistic community.\"\n                                trigger={\n                                  <Icon size=\"small\" name=\"info circle\" />\n                                }\n                              >\n                                <Popup.Content>\n                                  <>\n                                    An endonym (also known as autonym) is a\n                                    common, internal name for a geographical\n                                    place, group of people, or a\n                                    language/dialect, that is used only inside\n                                    that particular place, group, or linguistic\n                                    community.\n                                    <a href=\"https://en.wikipedia.org/wiki/Endonym_and_exonym\">\n                                      <Icon name=\"external\" />\n                                    </a>\n                                  </>\n                                </Popup.Content>\n                              </Popup>\n                            </Item.Header>\n                            <Item.Description>\n                              {country.nativeName}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header as=\"a\">Capital</Item.Header>\n                            <Item.Description>\n                              {country.capital}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n\n                <Grid style={{ margin: 0 }} columns={2}>\n                  <Grid.Row style={{ padding: 0 }}>\n                    {country.area !== null ? (\n                      <Grid.Column>\n                        <Item.Group relaxed>\n                          <Item style={{ margin: 0 }}>\n                            <Item.Content>\n                              <Item.Header>Size</Item.Header>\n                              <Item.Description>\n                                {unit === 'metric'\n                                  ? ` ${country.area.toLocaleString()} km²`\n                                  : ` ${Math.round(\n                                      country.area * 1.609\n                                    ).toLocaleString()} mi²`}\n                              </Item.Description>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Grid.Column>\n                    ) : (\n                      <Grid.Column>\n                        <Item.Group relaxed>\n                          <Item style={{ marginTop: 0 }}>\n                            <Item.Content>\n                              <Item.Header>Size</Item.Header>\n                              <Item.Description>Not provided.</Item.Description>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Grid.Column>\n                    )}\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header>Population</Item.Header>\n                            <Item.Description>\n                              {country.population.toLocaleString()}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n\n                <Divider style={{ margin: 0 }} />\n                <Grid style={{ margin: 0 }} columns={2}>\n                  <Grid.Row>\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header>Languages</Item.Header>\n\n                            <Item.Description>\n                              {country.languages.map((lang) => (\n                                <Grid.Row\n                                  style={{ padding: 0 }}\n                                  key={lang.name}\n                                >\n                                  {lang.name}\n                                </Grid.Row>\n                              ))}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header>Time Zones</Item.Header>\n                            <Item.Description>\n                              {country.timezones.map((tz) => (\n                                <Grid.Row style={{ padding: 0 }} key={tz}>\n                                  {tz}\n                                </Grid.Row>\n                              ))}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                <Divider style={{ margin: 0 }} />\n                <Grid style={{ margin: 0 }} columns={1}>\n                  <Grid.Row>\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ marginTop: 0 }}>\n                          <Item.Content>\n                            <Item.Header>Currencies</Item.Header>\n                            <Item.Description>\n                              <Grid style={{ margin: 0 }}>\n                                <Grid.Row\n                                  style={{ paddingTop: 0, paddingLeft: 0 }}\n                                  columns={3}\n                                >\n                                  <Grid.Column style={{ padding: 0 }}>\n                                    <strong> Symbol</strong>\n                                  </Grid.Column>\n                                  <Grid.Column>\n                                    <strong> Code</strong>\n                                  </Grid.Column>\n                                  <Grid.Column style={{ paddingRight: 0 }}>\n                                    <strong> Name</strong>\n                                  </Grid.Column>\n                                </Grid.Row>\n                                {country.currencies.map((curr) => (\n                                  <Grid.Row\n                                    columns={3}\n                                    style={{ padding: 0 }}\n                                    key={curr.code}\n                                  >\n                                    <Grid.Column>{curr.symbol}</Grid.Column>\n                                    <Grid.Column>{curr.code}</Grid.Column>\n                                    <Grid.Column style={{ paddingRight: 0 }}>\n                                      {curr.name}\n                                    </Grid.Column>\n                                  </Grid.Row>\n                                ))}\n                              </Grid>\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Card>\n            ) : (\n              <Card fluid style={{ margin: 0 }}>\n                <Grid style={{ margin: 0 }} columns={4}>\n                  <Grid.Row>\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ margin: 0 }}>\n                          <Item.Content>\n                            <Popup\n                              style={{\n                                borderRadius: 0,\n                                padding: '2em',\n                              }}\n                              hoverable\n                              inverted\n                              aria-label=\"An endonym (also known as autonym) is a common, internal name for a geographical place, group of people, or a language/dialect, that is used only inside that particular place, group, or linguistic community.\"\n                              trigger={<Item.Header>Endonym</Item.Header>}\n                            >\n                              <Popup.Content>\n                                <>\n                                  An endonym (also known as autonym) is a\n                                  common, internal name for a geographical\n                                  place, group of people, or a language/dialect,\n                                  that is used only inside that particular\n                                  place, group, or linguistic community.\n                                  <a href=\"https://en.wikipedia.org/wiki/Endonym_and_exonym\">\n                                    <Icon name=\"external\" />\n                                  </a>\n                                </>\n                              </Popup.Content>\n                            </Popup>\n\n                            <Item.Description>\n                              {country.nativeName}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ margin: 0 }}>\n                          <Item.Content>\n                            <Item.Header as=\"a\">Capital</Item.Header>\n                            <Item.Description>\n                              {country.capital}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                    {country.area !== null ? (\n                      <Grid.Column>\n                        <Item.Group relaxed>\n                          <Item style={{ margin: 0 }}>\n                            <Item.Content>\n                              <Item.Header>Size</Item.Header>\n                              <Item.Description>\n                                {unit === 'metric'\n                                  ? ` ${country.area.toLocaleString()} km²`\n                                  : ` ${Math.round(\n                                      country.area * 1.609\n                                    ).toLocaleString()} mi²`}\n                              </Item.Description>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Grid.Column>\n                    ) : (\n                      <Grid.Column>\n                        <Item.Group relaxed>\n                          <Item style={{ margin: 0 }}>\n                            <Item.Content>\n                              <Item.Header>Size</Item.Header>\n                              <Item.Description>Not provided.</Item.Description>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Grid.Column>\n                    )}\n                    <Grid.Column>\n                      <Item.Group relaxed>\n                        <Item style={{ margin: 0 }}>\n                          <Item.Content>\n                            <Item.Header>Population</Item.Header>\n                            <Item.Description>\n                              {country.population.toLocaleString()}\n                            </Item.Description>\n                          </Item.Content>\n                        </Item>\n                      </Item.Group>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                <Divider style={{ margin: 0 }} />\n                <Grid style={{ margin: 0 }} columns={2}>\n                  <Grid.Column>\n                    <Item.Group relaxed>\n                      <Item style={{ margin: 0 }}>\n                        <Item.Content>\n                          <Item.Header>Languages</Item.Header>\n                          <Item.Description>\n                            {country.languages.map((lang) => (\n                              <Grid.Row style={{ padding: 0 }} key={lang.name}>\n                                {lang.name}\n                              </Grid.Row>\n                            ))}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Item.Group relaxed>\n                      <Item style={{ margin: 0 }}>\n                        <Item.Content>\n                          <Item.Header>Time Zones</Item.Header>\n                          <Item.Description>\n                            {country.timezones.map((tz) => (\n                              <Grid.Row style={{ padding: 0 }} key={tz}>\n                                {tz}\n                              </Grid.Row>\n                            ))}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Column>\n                  {/*  */}\n                </Grid>\n                <Divider style={{ margin: 0 }} />\n                <Grid style={{ margin: 0 }} columns={3}>\n                  <Grid.Row style={{ paddingLeft: 14, paddingBottom: 0 }}>\n                    <Header>Currencies</Header>\n                  </Grid.Row>\n\n                  <Grid.Column>\n                    <Item.Group>\n                      <Item>\n                        <Item.Content>\n                          <Item.Header> Symbol</Item.Header>\n                          <Item.Description>\n                            {country.currencies.map((curr) => (\n                              <Grid.Row\n                                columns={3}\n                                style={{ padding: 0 }}\n                                key={curr.symbol}\n                              >\n                                {curr.symbol}\n                              </Grid.Row>\n                            ))}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Item.Group>\n                      <Item>\n                        <Item.Content>\n                          <Item.Header> Code</Item.Header>\n                          <Item.Description>\n                            {country.currencies.map((curr) => (\n                              <Grid.Row\n                                columns={3}\n                                style={{ padding: 0 }}\n                                key={curr.code}\n                              >\n                                {curr.code}\n                              </Grid.Row>\n                            ))}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Item.Group>\n                      <Item>\n                        <Item.Content>\n                          <Item.Header>Name</Item.Header>\n                          <Item.Description>\n                            {country.currencies.map((curr) => (\n                              <Grid.Row\n                                columns={3}\n                                style={{ padding: 0 }}\n                                key={curr.name}\n                              >\n                                {curr.name}\n                              </Grid.Row>\n                            ))}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Column>\n                </Grid>\n              </Card>\n            )}\n          </>\n        ) : (\n          <>\n            {isMobile ? (\n              <>\n                {!isWeatherLoading && !isLoading ? (\n                  <Card fluid style={{ margin: 0 }}>\n                    <Weather\n                      weather={weather}\n                      unit={unit}\n                      activeTab={activeTab}\n                      country={country}\n                    />\n                  </Card>\n                ) : (\n                  <Icon loading name=\"spinner\" />\n                )}\n              </>\n            ) : (\n              <>\n                {!isWeatherLoading && !isLoading ? (\n                  <Card fluid style={{ margin: 0 }}>\n                    <Weather\n                      weather={weather}\n                      unit={unit}\n                      activeTab={activeTab}\n                      country={country}\n                    />\n                  </Card>\n                ) : (\n                  <Icon loading name=\"spinner\" />\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Container>\n    </>\n  ) : (\n    <>\n      <Icon loading name=\"spinner\" />\n    </>\n  )\n}\n\nexport default Country\n","import React, { useRef, useEffect } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { Menu, Container, Icon } from 'semantic-ui-react'\n\nconst HeaderNav = ({ input, handleChange, countries }) => {\n  const inputRef = useRef()\n\n  useEffect(() => {\n    if (countries !== undefined) {\n      if (countries.length === 1) {\n        inputRef.current.blur()\n      }\n    }\n  }, [countries])\n\n  return isMobile ? (\n    <Menu fixed=\"top\" inverted>\n      <Container>\n        <Menu.Item\n          style={{ paddingLeft: 2, paddingRight: 0, marginRight: 15 }}\n          header\n        >\n          <Icon name=\"globe\" color=\"teal\" size=\"large\" />\n          <Menu.Menu>\n            <Menu.Item style={{ padding: 0 }}>World</Menu.Item>\n            <Menu.Item\n              style={{\n                paddingLeft: 0,\n                paddingTop: 0,\n                paddingBottom: 0,\n                paddingRight: 7,\n              }}\n            >\n              Countries\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu.Item>\n\n        <Menu.Item fitted>\n          <input\n            type=\"text\"\n            ref={inputRef}\n            value={input}\n            onChange={handleChange}\n            placeholder=\"Start typing to search\"\n          />\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            style={{ paddingLeft: 0, paddingRight: 0 }}\n            as=\"a\"\n            href=\"https://github.com/I-keep-trying/countries-semantic\"\n          >\n            <Icon name=\"github\" size=\"big\" />\n          </Menu.Item>\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  ) : (\n    <>\n      <Menu fixed=\"top\" inverted>\n        <Container fluid>\n          <Menu.Item header>\n            <Icon name=\"globe\" color=\"teal\" size=\"big\" />\n            <p> World Countries</p>\n          </Menu.Item>\n          <Menu.Item>\n            <input\n              type=\"text\"\n              ref={inputRef}\n              value={input}\n              onChange={handleChange}\n              placeholder=\"Start typing to search\"\n            />\n          </Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              as=\"a\"\n              href=\"https://github.com/I-keep-trying/countries-semantic\"\n            >\n              <Icon name=\"github\" size=\"big\" />\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    </>\n  )\n}\n\nexport default HeaderNav\n","import React, { useState, useEffect } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport axios from 'axios'\nimport { Container, Button, Image, Menu, Grid } from 'semantic-ui-react'\nimport Country from './Country'\nimport HeaderNav from '../components/Header'\nimport countriesList from '../countriesList'\nimport regions from '../regions'\n\nconst Countries = () => {\n  const [country, setCountry] = useState(null)\n  const [activeItem, setActiveItem] = useState('All')\n  const [input, setInput] = useState('')\n  const [region, setRegion] = useState('All')\n  const [subregion, setSubRegion] = useState('')\n  const [isLoading, setIsLoading] = useState(true)\n\n  const filteredCountries = countriesList.filter((c) => {\n    return c.name.toLowerCase().startsWith(input.toLowerCase())\n  })\n\n  const filterByRegion =\n    region === 'All'\n      ? filteredCountries\n      : filteredCountries.filter((c) => {\n          if (region === 'Other' || region === 'Polar') {\n            return c.region === ''\n          }\n          return c.region.toLowerCase() === region.toLowerCase()\n        })\n\n  const filterBySubregion =\n    subregion === ''\n      ? filterByRegion\n      : filterByRegion.filter((r) => r.subregion === subregion)\n\n  useEffect(() => {\n    if (filterBySubregion.length === 1) {\n      setInput(filterBySubregion[0].name)\n    }\n  }, [filterBySubregion])\n\n  useEffect(() => {\n    if (input !== '') {\n      axios\n        .get(`https://restcountries.eu/rest/v2/name/${input}`)\n        .then((result) => {\n          setCountry(result.data[0])\n          setIsLoading(false)\n        })\n    }\n  }, [input])\n\n  const reset = () => {\n    setInput('')\n    setRegion('All')\n    setSubRegion('')\n  }\n\n  const handleClick = (c) => {\n    !isLoading ? setIsLoading(true) : isLoading\n    setInput(c.name)\n  }\n\n  const filterReset = () => {\n    setRegion('All')\n    setSubRegion('')\n  }\n\n  const handleFilter = (e) => {\n    filterReset()\n    !isLoading ? setIsLoading(true) : isLoading\n    setInput(e.target.value)\n  }\n\n  const handleRegionClick = (e, { name }) => {\n    setSubRegion('')\n    setRegion(name)\n    setActiveItem(name)\n  }\n\n  /*   if (filterBySubregion.length === 0) {\n    return (\n      <>\n        <p>no matches</p>\n        <Button onClick={reset}>new search</Button>\n      </>\n    )\n  }\n\n  if (filterBySubregion.length === 1) {\n    if (country !== null) {\n      return !isLoading ? (\n        <Country\n          setInput={setInput}\n          setRegion={setRegion}\n          isLoading={isLoading}\n          country={country}\n          setSubRegion={setSubRegion}\n          setIsLoading={setIsLoading}\n          setActiveItem={setActiveItem}\n        />\n      ) : (\n        <></>\n      )\n    }\n  } */\n\n  const getSubregions = regions.filter((r) =>\n    r.region === activeItem ? r : ''\n  )\n\n  const CountriesTable = () => {\n    return isMobile ? (\n      <div>\n        {filterBySubregion.map((c) => {\n          return (\n            <Grid.Row key={c.id} style={{ marginTop: 3, marginBottom: 3 }}>\n              <Grid style={{ margin: 0 }}>\n                <Grid.Column\n                  width={2}\n                  style={{\n                    paddingLeft: 2,\n                    paddingTop: 0,\n                    paddingBottom: 0,\n                    paddingRight: 0,\n                  }}\n                >\n                  <Image bordered size=\"mini\" src={c.flag} alt=\"country flag\" />\n                </Grid.Column>\n                <Grid.Column width={10} style={{ paddingTop: 0 }}>\n                  {c.name}\n                </Grid.Column>\n                <Grid.Column width={4} style={{ padding: 0 }}>\n                  <Button onClick={() => handleClick(c)} size=\"mini\" basic>\n                    Details\n                  </Button>\n                </Grid.Column>\n              </Grid>\n            </Grid.Row>\n          )\n        })}\n      </div>\n    ) : (\n      <>\n        {filterBySubregion.map((c) => {\n          return (\n            <Grid.Row\n              verticalAlign=\"middle\"\n              columns={3}\n              key={c.id}\n              style={{\n                padding: 0,\n              }}\n            >\n              <Grid.Column width={2}>\n                <Image size=\"mini\" src={c.flag} alt=\"country flag\" bordered />\n              </Grid.Column>\n              <Grid.Column width={12}>{c.name}</Grid.Column>\n              <Grid.Column width={2}>\n                <Button onClick={() => handleClick(c)} basic compact>\n                  Details\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </>\n    )\n  }\n\n  const CountriesMenu = () => {\n    return isMobile ? (\n      <div>\n        <Menu\n          style={{ top: 60, width: '6rem' }}\n          fixed=\"right\"\n          size=\"mini\"\n          tabular=\"right\"\n          vertical\n          borderless\n        >\n          {regions.map((r) => (\n            <div key={r.id}>\n              <Menu.Item\n                name={r.region}\n                active={activeItem === r.region}\n                onClick={handleRegionClick}\n              >\n                {r.name}\n              </Menu.Item>\n              {r.subregions.length > 0 && activeItem === r.region ? (\n                <div>\n                  {r.subregions.map((s) => (\n                    <Menu size=\"mini\" key={s}>\n                      <Menu.Item\n                        name={s}\n                        onClick={() => {\n                          setSubRegion(s)\n                        }}\n                      >\n                        {s}\n                      </Menu.Item>\n                    </Menu>\n                  ))}\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          ))}\n        </Menu>\n      </div>\n    ) : (\n      <>\n        <Menu attached=\"top\" widths={8}>\n          {regions.map((r) => (\n            <Menu.Item\n              key={r.id}\n              name={r.region}\n              active={activeItem === r.region}\n              onClick={handleRegionClick}\n            >\n              {r.name}\n            </Menu.Item>\n          ))}\n        </Menu>\n        {activeItem !== 'All' &&\n        activeItem !== 'Polar' &&\n        activeItem !== 'Other' ? (\n          <Menu attached=\"bottom\" widths={getSubregions[0].subregions.length}>\n            {regions.map((r) => {\n              return activeItem === r.region ? (\n                r.subregions.map((rs) => (\n                  <Menu.Item\n                    key={rs}\n                    name={rs}\n                    active={activeItem === rs}\n                    onClick={() => {\n                      setSubRegion(rs)\n                    }}\n                  />\n                ))\n              ) : (\n                <></>\n              )\n            })}\n          </Menu>\n        ) : (\n          <></>\n        )}\n      </>\n    )\n  }\n\n  return (\n    <>\n      <HeaderNav\n        input={input}\n        setInput={setInput}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        handleChange={handleFilter}\n        countries={filterBySubregion}\n      />\n      <Container fluid>\n        {filterBySubregion.length === 0 ? (\n          <>\n            <p>no matches</p>\n            <Button onClick={reset}>new search</Button>\n          </>\n        ) : (\n          <>\n            {filterBySubregion.length === 1 ? (\n              <>\n                {country !== null ? (\n                  <>\n                    {!isLoading ? (\n                      <Country\n                        setInput={setInput}\n                        setRegion={setRegion}\n                        isLoading={isLoading}\n                        country={country}\n                        setSubRegion={setSubRegion}\n                        setIsLoading={setIsLoading}\n                        setActiveItem={setActiveItem}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                ) : (\n                  <></>\n                )}\n              </>\n            ) : (\n              <>\n                {isMobile ? (\n                  <>\n                    <Grid>\n                      <Grid.Column\n                        style={{ paddingLeft: 0, paddingRight: 0 }}\n                        width={12}\n                      >\n                        <CountriesTable />\n                      </Grid.Column>\n                      <Grid.Column\n                        style={{ paddingLeft: 0, paddingRight: 0 }}\n                        width={4}\n                      >\n                        <CountriesMenu />\n                      </Grid.Column>\n                    </Grid>\n                  </>\n                ) : (\n                  <>\n                    <Grid style={{ margin: 0, padding: 0 }} id=\"Grid1\">\n                      <CountriesMenu />\n                      <CountriesTable />\n                    </Grid>\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Countries\n","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport Footer from './components/Footer'\r\nimport Countries from './pages/Countries'\r\n//import Map from './Map'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ paddingBottom: '100px' }}>\r\n      <Countries />\r\n      <Container fluid>\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}